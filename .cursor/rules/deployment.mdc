---
description: 
globs: scripts/**/*,deployment-config.json,.github/workflows/**/*
alwaysApply: false
---
---
description: "Azure Functions deployment configuration rules with exact resource names and commands for HustleMode.ai"
globs: "scripts/**/*,deployment-config.json,.github/workflows/**/*,DEPLOYMENT.md"
alwaysApply: false
---

# HustleMode.ai Deployment Rules

## ‚ö†Ô∏è CRITICAL: Documentation Synchronization

**MANDATORY**: Any changes to deployment configuration MUST update both:
- `DEPLOYMENT.md` - Complete deployment guide with examples
- `deployment-config.json` - Authoritative configuration values

**These files must ALWAYS stay synchronized** to prevent deployment issues and configuration drift.

## üéØ Azure Configuration (Authoritative Values)

### Resource Configuration
- **Function App Name**: `hustlemode-api`
- **Resource Group**: `hustlemode.ai`
- **Location**: `eastus`
- **Runtime**: `PYTHON:3.11`
- **Hosting Plan**: `Consumption Plan`
- **Service Type**: `Azure Functions v2`

### URLs (Production)
- **Function App**: `https://hustlemode-api.azurewebsites.net/`
- **WhatsApp Webhook**: `https://hustlemode-api.azurewebsites.net/api/messaging/whatsapp`
- **Health Check**: `https://hustlemode-api.azurewebsites.net/api/health`
- **Kudu SCM**: `https://hustlemode-api.scm.azurewebsites.net/`

### GitHub Configuration
- **Repository**: `https://github.com/vbkotecha/hustlemode-infra`
- **Secret**: `AZUREAPPSERVICE_PUBLISHPROFILE_FFEB2282094642A1A8B5E3AFAE67C0DC`

## üöÄ Current Pipeline Architecture

### 2-Stage Deployment Pipeline
1. **Anti-Bloat Check** (runs on all pushes/PRs)
   - Repository hygiene verification
   - Quality gate before deployment

2. **Deploy** (main branch only)
   - Python package installation to `.python_packages/lib/site-packages/`
   - Direct ZIP deployment via Azure API
   - Health and webhook endpoint verification

### Pipeline Requirements
- **NEVER use artifact upload/download** - deploy directly
- **ALWAYS install Python packages** to `.python_packages/lib/site-packages/`
- **ALWAYS verify endpoints** after deployment
- **NEVER use virtual environments** in GitHub Actions

## üêç Python Packaging Requirements

### Mandatory Package Structure
```bash
# Correct installation command
cd azure-functions-deploy
mkdir -p .python_packages/lib/site-packages
pip install -r requirements.txt --target .python_packages/lib/site-packages
```

### Package Validation Rules
- ‚úÖ Deployment ZIP must contain `.python_packages/lib/site-packages/` with all dependencies
- ‚úÖ Use `zip -r deploy.zip .` to include hidden directories
- ‚ùå Never use virtual environments for Azure Functions deployment
- ‚ùå Never use `zip -r deploy.zip ./*` (misses .python_packages)

## üö® MANDATORY Documentation Sync Requirements

### üîÑ Change Propagation Rules (ALWAYS REQUIRED)

#### Any deployment-config.json changes ‚Üí MUST UPDATE:
- ‚úÖ **DEPLOYMENT.md**: All URLs, configuration values, and examples
- ‚úÖ **GitHub workflow**: App names and endpoints
- ‚úÖ **PRODUCTION_LINKS.md**: Live URLs and testing commands
- ‚úÖ **This cursor rule**: If resource names change

#### Any .github/workflows/azure-functions-deploy.yml changes ‚Üí MUST UPDATE:
- ‚úÖ **DEPLOYMENT.md**: Method 3 (GitHub Actions) section
- ‚úÖ **deployment-config.json**: Deployment methods array
- ‚úÖ **Pipeline documentation**: Stage descriptions

#### Any DEPLOYMENT.md changes ‚Üí MUST UPDATE:
- ‚úÖ **Last modified date**: Current date
- ‚úÖ **deployment-config.json**: Verify all values match
- ‚úÖ **Test all URLs**: Ensure curl commands work with current endpoints

### üìã Documentation Synchronization Checklist

Before committing ANY deployment changes:
- [ ] **DEPLOYMENT.md** reflects all current configuration values
- [ ] **deployment-config.json** contains authoritative source of truth
- [ ] **All URLs are identical** across all files (no placeholders)
- [ ] **Function keys are current** in all examples
- [ ] **Dates are updated** to reflect modification time
- [ ] **All curl commands tested** and working

### Documentation Standards (STRICT REQUIREMENTS)
- **DEPLOYMENT.md**: Must reflect current 2-stage pipeline architecture
- **deployment-config.json**: Must match Azure Portal configuration exactly
- **All URLs**: Must be consistent across all files (zero tolerance for drift)
- **Dates**: Must be current (June 11, 2025)
- **Function Keys**: Must be real and working (no placeholder values)

## üîß Deployment Methods

### Method 1: Azure Functions Core Tools (Recommended)
```bash
cd azure-functions-deploy
func azure functionapp publish hustlemode-api --python --build remote
```

### Method 2: GitHub Actions (Automated)
- 2-stage pipeline: Anti-Bloat Check ‚Üí Deploy
- Direct ZIP deployment with endpoint verification
- Runs on push to main branch

### Method 3: Clean Script
```bash
./scripts/deploy-clean.sh --auto
```

## üö´ Prohibited Patterns

### Never Do These:
- ‚ùå Use different app names between files (always `hustlemode-api`)
- ‚ùå Create 3-stage pipelines with artifact upload/download
- ‚ùå Install Python packages to system or virtual environment
- ‚ùå Use placeholder values in documentation
- ‚ùå Deploy without endpoint verification
- ‚ùå Miss .python_packages directory in ZIP

### Always Do These:
- ‚úÖ Use exact resource names across all files
- ‚úÖ Install packages to `.python_packages/lib/site-packages/`
- ‚úÖ Deploy directly without artifact complexity
- ‚úÖ Verify health and webhook endpoints post-deployment
- ‚úÖ Keep documentation synchronized and current

## üéØ Quality Assurance

### üö® BEFORE ANY DEPLOYMENT CHANGE - MANDATORY CHECKLIST:
1. **Documentation Sync**: Verify DEPLOYMENT.md and deployment-config.json are consistent
2. **URL Testing**: Test ALL documented URLs and endpoints work with current function keys
3. **Pipeline Match**: Ensure GitHub workflow matches documentation exactly
4. **Python Packaging**: Validate packaging follows `.python_packages/lib/site-packages/` requirements
5. **Date Updates**: Update last modified dates in DEPLOYMENT.md
6. **Cross-Reference**: Check PRODUCTION_LINKS.md matches updated configuration
7. **Function Keys**: Verify all curl examples use real, working function keys

### üö´ DEPLOYMENT BLOCKERS:
- ‚ùå **Inconsistent URLs** between DEPLOYMENT.md and deployment-config.json
- ‚ùå **Placeholder values** (like "your_function_key_here") in documentation
- ‚ùå **Outdated function keys** in curl examples
- ‚ùå **Missing documentation updates** after configuration changes

---
**Purpose**: Single source of truth for all deployment requirements
**Scope**: Configuration, documentation, packaging, and pipeline architecture
**‚ö†Ô∏è CRITICAL**: DEPLOYMENT.md and deployment-config.json MUST stay synchronized at all times
